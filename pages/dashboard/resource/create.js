import { Fragment } from "react";
import Head from "next/head";
import { withSSRContext } from "aws-amplify";
import { TemplateIcon } from "@heroicons/react/solid";
import SidebarLayout from "../../../components/dashboard/SidebarLayout";
import CreateResource from "../../../components/dashboard/resource/CreateResource";

const Create = () => {
  return (
    <Fragment>
      <Head>
        <title>Create Resource</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <div className="flex  items-center justify-between bg-gradient-to-r from-pink-500 via-purple-500 to-indigo-500  px-4 py-3 rounded-md shadow">
          <h2 className="text-xl  font-bold tracking-wider ">
            Create Resource
          </h2>
          <TemplateIcon className="h-6 w-6 text-pink-700" />
        </div>
        <div className="">
          <CreateResource />
        </div>
      </div>
    </Fragment>
  );
};

Create.PageLayout = SidebarLayout;

export default Create;

// export async function getServerSideProps({ req }) {
//   const SSR = withSSRContext({ req });

//   try {
//     const user = await SSR.Auth.currentAuthenticatedUser();
//     const group =
//       user?.signInUserSession?.accessToken?.payload["cognito:groups"];

//     if (user && !group.includes("admin")) {
//       return {
//         notFound: true,
//       };
//     }
//   } catch (error) {
//     if ((error = "The user is not authenticated")) {
//       return {
//         notFound: true,
//       };
//     }
//   }

//   return {
//     props: {},
//   };
// }
