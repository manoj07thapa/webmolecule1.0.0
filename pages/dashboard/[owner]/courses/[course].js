import { useRouter } from "next/router";
import { API } from "aws-amplify";
import { useCallback, useEffect, useState, useMemo } from "react";
import { ChevronRightIcon } from "@heroicons/react/solid";
import Head from "next/head";
import SidebarLayout from "../../../../components/dashboard/SidebarLayout";
import { listCoursesWithEnrollees } from "../../../../src/customGraphql/queries";
import { getCourseWithEnrollees } from "../../../../src/customGraphql/queries";
import EnrolledStudentTable from "../../../../components/dashboard/course/EnrolledStudentTable";
import { motion } from "framer-motion";
import FramerMotion from "../../../../components/sharedLayouts/FramerMotion";
import { listUserCourses } from "../../../../src/graphql/queries";
import { deleteUserCourses } from "../../../../src/graphql/mutations";
import CourseEditModal from "../../../../components/dashboard/course/CourseEditModal";
import CourseDetail from "../../../../components/dashboard/course/CourseDetail";
import CourseTabs from "../../../../components/dashboard/course/CourseTabs";


const Course = () => {
  const router = useRouter();
  const [course, setCourse] = useState({});
  console.log('course', course);

  const fetchCourse = useCallback(async () => {
    const res = await API.graphql({
      query: getCourseWithEnrollees,
      variables: {
        id: router.query.course,
      },
      authMode: "AMAZON_COGNITO_USER_POOLS",
    });
    setCourse(res.data.getCourse);

  }, [router.query.course])

  useEffect(() => {
    fetchCourse();
  }, [fetchCourse]);

  const deleteUserCourse = async (enrolleeId) => {
    const filter = {
      courseID: { eq: course.id }, userID: { eq: enrolleeId }
    }
    try {
      const res = await API.graphql({
        query: listUserCourses,
        variables: {
          filter
        },
        authMode: "AMAZON_COGNITO_USER_POOLS",
      });
      const userCoursesId = res.data.listUserCourses.items.map(item => item.id)
      const ucId = {
        id: userCoursesId[0]
      }
      const deleteRes = await API.graphql({
        query: deleteUserCourses,
        variables: {
          input: ucId
        },
        authMode: "AMAZON_COGNITO_USER_POOLS",
      })
      fetchCourse()
    } catch (error) {
      console.log(error);

    }

  }

  return (
    <FramerMotion>
      <Head>
        <title>{`${course.tutor} | ${course.title}`}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h3 className="text-lg font-bold tracking-wide text-indigo-500">
        {router.query.owner} / {router.query.course}
      </h3>
      <CourseTabs course={course} enrollees={course.enrollees} />
    </FramerMotion >
  );
};



Course.PageLayout = SidebarLayout;
export default Course;
