import Head from "next/head";
import { Fragment, useState, useEffect, useCallback } from "react";
import { useRouter } from "next/router";
import { Storage, API, withSSRContext } from "aws-amplify";
import CourseSidebar from "../../components/courses/CourseSidebar";
import { listCourses } from "../../src/graphql/queries";
import CourseCard from "../../components/courses/CourseCard";

export const getServerSideProps = async (ctx) => {
  const param = ctx.query.param;
  const req = ctx.req;
  const SSR = withSSRContext({ req });

  const filter = {
    category: { eq: param },
  };

  if (param === "all") {
    const response = await SSR.API.graphql({
      query: listCourses,
    });

    return {
      props: {
        ssrCourses: response.data.listCourses.items,
      },
    };
  }

  const response = await SSR.API.graphql({
    query: listCourses,
    variables: { filter },
  });

  return {
    props: {
      ssrCourses: response.data.listCourses.items,
    },
  };
};

const Course = ({ ssrCourses }) => {
  const { query } = useRouter();
  const [courses, setCourses] = useState();
  console.log("COURSES", courses);

  const fetchCourses = useCallback(async () => {
    try {
      const courses = await Promise.all(
        ssrCourses.map(async (course) => {
          const images = await Promise.all(
            course.files.map(async (image) => {
              const img = await Storage.get(image);

              return img;
            })
          );

          course.s3Images = images;
          return course;
        })
      );
      setCourses(courses);
    } catch (error) {
      console.log("error", error);
    }
  }, [ssrCourses]);

  useEffect(() => {
    fetchCourses();
  }, [fetchCourses]);

  return (
    <Fragment>
      <Head>
        <title>{`Courses | ${query.param}`}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className=" mx-auto mt-9 max-w-7xl px-4 sm:px-6 lg:mt-16">
        <div className="sm:grid sm:grid-cols-3 sm:gap-3 md:grid-cols-8">
          <div className="sm:col-span-1 md:col-span-2 ">
            <CourseSidebar />
          </div>
          <main className="sm:col-span-2 md:col-span-6">
            {courses ? <CourseCard courses={courses} /> : "LOADING..."}
          </main>
        </div>
        <div>rest of the content</div>
      </div>
    </Fragment>
  );
};

export default Course;
