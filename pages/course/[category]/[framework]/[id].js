import { Fragment, useState, useEffect, useCallback } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import Image from "next/image";
import { Storage, API, withSSRContext } from "aws-amplify";
import { listCourses, getCourse } from "../../../../src/graphql/queries";

export async function getStaticPaths() {
  const SSR = withSSRContext();
  const { data } = await SSR.API.graphql({
    query: listCourses,
    authMode: "AWS_IAM",
  });
  const paths = data.listCourses.items.map((course) => ({
    params: {
      id: course.id,
      category: course.category,
      framework: course.framework,
    },
  }));
  return {
    fallback: true,
    paths,
  };
}

export async function getStaticProps({ params }) {
  const SSR = withSSRContext();
  const { data } = await SSR.API.graphql({
    query: getCourse,
    variables: {
      id: params.id,
    },
    authMode: "AWS_IAM",
  });
  return {
    props: {
      ssgCourse: data.getCourse,
    },
  };
}

const Course = ({ ssgCourse }) => {
  const router = useRouter();

  const [courseImage, setCourseImage] = useState(null);

  const fetchCourse = useCallback(async () => {
    try {
      if (ssgCourse.files) {
        const imageKey = await Storage.get(ssgCourse.files);
        setCourseImage(imageKey);
      }
    } catch (error) {
      console.log("error", error);
    }
  }, [ssgCourse]);

  useEffect(() => {
    fetchCourse();
  }, [fetchCourse]);

  if (router.isFallback) {
    return (
      <div>
        <h1>Loading&hellip;</h1>
      </div>
    );
  }
  return (
    <Fragment>
      <Head>
        <title>{`Courses | ${router.query.param}`}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="grid ">
        {courseImage ? (
          <Image
            src={courseImage}
            height={30}
            width={35}
            alt="course image"
            objectFit="cover"
            layout="responsive"
            objectPosition="center center"
            className="rounded-md shadow-md text-red-500"
            priority
          />
        ) : (
          "ImageLoading..."
        )}

        <p>{ssgCourse.category}</p>
        <p>{ssgCourse.framework}</p>
      </div>
    </Fragment>
  );
};
export default Course;
